name: Compile and Distribute

on:
  push:
    branches:
      - main  # Run the workflow on pushes to the main branch
  pull_request:  # Optional: Test builds on pull requests
    branches:
      - main

jobs:
  compile-and-distribute:
    name: Build and Publish to PyPI
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Step 4: Install dependencies
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      # Step 5: Build the package
      - name: Build the wheel
        run: |
          maturin build --release --strip
        env:
          CARGO_TERM_COLOR: always

      # Step 6: Upload to PyPI
      - name: Publish to PyPI
        if: github.event_name == 'push'  # Only publish on push events
        run: |
          ${{ secrets.TWINE_UPLOAD }}
          
